user  nginx;
daemon off;
worker_processes  auto;
worker_cpu_affinity auto;

error_log  /data/logs/nginx_error.log;
pid        nginx.pid;


events {
	use epoll;
	worker_connections  65535;
}

http {
	include       mime.types;
	default_type  application/octet-stream;

	sendfile      on;
	tcp_nopush    on;
	tcp_nodelay   on;

	keepalive_timeout  65;
	resolver_timeout 3s;

	gzip    on;
	gzip_min_length 1k;
	gzip_buffers    4   16k;
	gzip_http_version   1.0;
	gzip_comp_level 2;
	gzip_types  text/plain application/x-javascript text/css application/xml application/javascript image/png image/jpeg;
	gzip_vary   on;

	server_names_hash_max_size 512;
	server_names_hash_bucket_size 256;
	client_header_buffer_size 32k;
	large_client_header_buffers 4 32k;
	client_max_body_size 20m;
	proxy_connect_timeout 10;
	proxy_send_timeout 10;
	proxy_read_timeout 30;
	fastcgi_connect_timeout 10;
	fastcgi_send_timeout 10;
	fastcgi_read_timeout 30;
	fastcgi_buffer_size 64k;
	fastcgi_buffers 4 64k;
	fastcgi_busy_buffers_size 128k;
	fastcgi_temp_file_write_size 128k;

	log_format  access  '$remote_addr	$time_local	$request'
		'	$status	$body_bytes_sent	$http_referer'
		'	$http_user_agent	$http_x_forwarded_for'
		'	$request_time	$request_body	$args'
		'	$upstream_response_time	$remote_user';

	server {
		listen 80;
		server_name {{SERVER_NAME}};
		index  index.php index.html index.htm;
		root   /data/wwwroot/html/;
		try_files  $uri $uri/ /index.php?$query_string;

		location ~ \.php(.*)$ {
			fastcgi_pass unix:/var/run/php-fpm.sock;
			fastcgi_index index.php;
			include fastcgi.conf;
			fastcgi_split_path_info ^(.+\.php)(.*)$;
			fastcgi_param PATH_INFO $fastcgi_path_info;
			fastcgi_param HTTP_HOST '{{CGI_PARAM_SERVER_NAME}}';
			fastcgi_param SERVER_NAME '{{CGI_PARAM_SERVER_NAME}}';
			fastcgi_param HTTPS '{{CGI_PARAM_HTTPS}}';
		}

		location ~ ^/status$ {
			fastcgi_pass unix:/var/run/php-fpm.sock;
			include fastcgi_params;
			fastcgi_param SCRIPT_FILENAME $fastcgi_script_name;
		}

		location ~ ^/metrics$ {
			proxy_pass http://127.0.0.1:8081;
		}

		location /echo {
			add_header  Content-Type 'text/plain;charset=utf-8';
			return 200 "hello";
		}

		access_log /data/logs/access.{{SERVER_NAME}}.log access;
		error_log  /data/logs/error.{{SERVER_NAME}}.log;
	}
}

